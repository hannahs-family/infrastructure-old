---
- name: Create ansible remote user group
  become: true
  group:
    name: ansible

- name: Create ansible remote user
  become: true
  user:
    name: ansible
    group: ansible
    password: "{{ lookup('password', '/tmp/password chars=ascii_letters,digits,punctuation length=64') | password_hash('sha512') }}"
    update_password: on_create
  register: user

- name: Lock ansible remote user's password
  become: true
  user:
    name: ansible
    password_lock: true

- name: Create ansible remote user .ssh directory
  file:
    path: "{{ user.home }}/.ssh"
    state: directory
    owner: ansible
    group: ansible
    mode: 01700

- name: Check for ansible remote user authorized_keys file
  stat:
    path: "{{ user.home }}/.ssh/authorized_keys"
  register: authorized_keys

- name: Add ansible remote user SSH public key to authorized_keys file
  lineinfile:
    path: "{{ user.home }}/.ssh/authorized_keys"
    line: "{{ lookup('file', 'files/ansible.id_rsa.pub') }}"
    owner: ansible
    group: ansible
    mode: 0644
  when: authorized_keys.stat.exists

- name: Copy ansible remote user SSH authorized_keys file
  copy:
    src: ansible.id_rsa.pub
    dest: "{{ user.home }}/.ssh/authorized_keys"
    owner: ansible
    group: ansible
    mode: 0644
  when: not authorized_keys.stat.exists

- name: Add ansible remote user sudoers configuration
  become: true
  copy:
    src: sudoers.d/00-ansible
    dest: /etc/sudoers.d/
    owner: root
    group: root
    mode: 0440
    validate: /usr/sbin/visudo -cf %s
